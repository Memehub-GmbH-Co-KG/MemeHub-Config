{
    "telegram": {
        "bot_token": null,
        "group_id": null,
        "bot_handle": "<Your bot handle (ends in 'bot')>",
        "public_welcome_message": "Hi %USER%!",
        "welcome_message": "Welcome to the MemeHub! 👋\n\nPlease send your memes to this private chat, I will forward them for you.",
        "help_message": "Just send me memes! I will then ask you to pick a category. You can also choose a custom category by including a cation. When all is done I will send the meme for you. We support images, gifs and videos."
    },
    "redis": {
        "connection": {
            "port": 6379,
            "host": "mhredis",
            "prefix": "mh:"
        },
        "keys": {
            "categories": "state:categories",
            "mappings": "state:categories:mappings",
            "maximum": "state:categories:maximum",
            "columns": "state:categories:columns",
            "posts": "limits:state:posts",
            "votes": "limits:state:vote",
            "tokens": "tokens:state:tokens"
        }
    },
    "rrb": {
        "channels": {
            "config": {
                "changed": "events:config-changed",
                "set": "config:set",
                "get": "config:get"
            },
            "logging": {
                "log": "logging:log",
                "get": "logging:get"
            },
            "meme": {
                "edited": "events:edit",
                "posted": "events:post"
            },
            "vote": {
                "issued": "events:vote",
                "retracted": "events:retract-vote"
            },
            "token": {
                "issue": "tokens:issue"
            },
            "categories": {
                "created": "events:category-created",
                "deleted": "events:category-deleted",
                "mappingCreated": "events:category-mapping-created",
                "mappingDeleted": "events:category-mapping-deleted",
                "maximumChanged": "events:category-maximum-changed",
                "columnsChanged": "events:category-columns-changed",
                "create": "categories:create",
                "delete": "categories:delete",
                "list": "categories:list",
                "createMapping": "categories:create-mapping",
                "deleteMapping": "categories:delete-mapping",
                "mappings": "categories:mappings",
                "get": "categories:get",
                "set": "categories:set",
                "add": "categories:add",
                "remove": "categories:remove",
                "validate": "categories:validate",
                "getOrSetMaximum": "categories:maximum",
                "getOrSetColumns": "categories:columns"
            },
            "limits": {
                "mayPost": "limits:may-post",
                "mayVote": "limits:may-vote",
                "getQuota": "limits:quota"
            },
            "permissions": {
                "isAdmin": "permissions:is-admin",
                "canChangeInfo": "permissions:can-change-info",
                "canDeleteMessages": "permissions:can-delete-messages"
            },
            "contests": {
                "started": "events:contest-started",
                "stopped": "events:contest-started",
                "created": "events:contest-created",
                "deleted": "events:contest-deleted",
                "create": "contests:create",
                "start": "contests:start",
                "stop": "contests:stop",
                "delete": "contests:delete",
                "list": "contests:list",
                "top": "contests:top"
            }
        }
    },
    "mongodb": {
        "connection": "mongodb://root:root@mhmongo",
        "database": "development",
        "collections": {
            "memes": "memes",
            "users": "users",
            "logs": "logs",
            "contests": "contests"
        }
    },
    "state": {
        "categories": {
            "active": [],
            "mappings": {},
            "maximum": 5,
            "columns": 5
        }
    },
    "logging": {
        "targets": [
            {
                "type": "console",
                "enabled": true,
                "level": "debug",
                "timestamp": "HH:mm:ss.SSS",
                "indentation": "   ] "
            },
            {
                "type": "cache",
                "enabled": false,
                "level": "debug",
                "size": 1000,
                "name": "default"
            },
            {
                "type": "mongodb",
                "enabled": false,
                "level": "info"
            },
            {
                "type": "telegram",
                "enabled": false,
                "level": "warning",
                "chats": [],
                "timestamp": "HH:mm:ss.SSS"
            }
        ],
        "levels": {
            "hierarchy": {
                "error": 0,
                "warning": 1,
                "notice": 2,
                "info": 3,
                "debug": 4
            },
            "mapping": {
                "error": "error",
                "err": "error",
                "warning": "warning",
                "wrn": "warning",
                "notice": "notice",
                "ntc": "notice",
                "info": "info",
                "inf": "info",
                "debug": "debug",
                "dbg": "debug"
            },
            "internal": {
                "onInvalidLog": "warning",
                "onTargetFailedToHandle": "warning"
            }
        },
        "targetErrorTimeout": 300000,
        "events": {
            "logEvents": false,
            "level": "info",
            "prefix": "events",
            "channels": [
                "contest-created",
                "contest-deleted",
                "contest-started",
                "contest-stopped",
                "post",
                "vote",
                "retract-vote"
            ]
        }
    },
    "permissions": {
        "ttl": 3600000
    },
    "limits": {
        "post": {
            "time": {
                "quota": 2,
                "cron": "0 05 * * *"
            },
            "tokens": {
                "gain": 1,
                "cost": 1,
                "threshold": 10,
                "applicableVotes": [
                    "like",
                    "weeb"
                ]
            }
        },
        "vote": {
            "cooldown": 2000,
            "ban": 300000,
            "votes": 4
        }
    },
    "achievements": {
        "post_count": [
            {
                "count": 1,
                "message": "🎊 %USER% just posted for the first time 🎊"
            },
            {
                "count": 10,
                "message": "This is your %COUNT%th meme, %USER%!"
            },
            {
                "count": 100,
                "message": "WOW! That's a total %COUNT% memes from %USER% 😲"
            },
            {
                "count": 200,
                "message": "🔥%COUNT%🔥️ memes from %USER% 🥳"
            },
            {
                "count": 300,
                "message": "You posted %COUNT% memes so far, %USER%. That's dedication 🙏"
            },
            {
                "count": 500,
                "message": "🙀 %USER% just reached %COUNT% memes!"
            },
            {
                "count": 700,
                "message": "⚠️⚠️⚠️ %COUNT% memes by %USER% ⚠️⚠️⚠️"
            },
            {
                "count": 1000,
                "message": "%USER% posted a total of %COUNT% memes 🎈🎉🎊"
            }
        ],
        "vote_count": {
            "like": [
                {
                    "count": 1,
                    "message": "%USER% just got a like ❤️"
                },
                {
                    "count": 50,
                    "message": "🎊🎉 Let's celebrate %COUNT% likes by %USER% 🎉🎊"
                },
                {
                    "count": 100,
                    "message": "Dominating! %COUNT% people clicked like on a meme by %USER%"
                },
                {
                    "count": 500,
                    "message": "%USER% is unstoppable! %COUNT% likes🔥"
                },
                {
                    "count": 1000,
                    "message": "💥GODLIKE💥 %USER% now has %COUNT% likes!"
                },
                {
                    "count": 5000,
                    "message": "Holy Shit! Somebody liked a meme from god %USER% for the %COUNT%th time 🤯"
                }
            ],
            "weeb": [
                {
                    "count": 10,
                    "message": "Ha! %USER% is a weeb!"
                },
                {
                    "count": 100,
                    "message": "Hey %USER%! Why can't you stop posting weeb memes?"
                },
                {
                    "count": 200,
                    "message": "You just can't help yourself, can you %USER%? 😤"
                },
                {
                    "count": 300,
                    "message": "🚨 WEEB ALARM 🚨 (%COUNT% weeb votes for %USER%)"
                },
                {
                    "count": 500,
                    "message": "If you continue posting weeb memes you will be a weeblord very soon, %USER%"
                },
                {
                    "count": 750,
                    "message": "I CANNOT WARN YOU AGAIN, %USER%! STOP POSTING WEEB MEMES AS LONG A YOU CAN! IT IS NOT TOO LATE!"
                },
                {
                    "count": 1000,
                    "message": "🔔🔔🔔 IT'S OFFICIAL! %USER% is a weeblord 🔔🔔🔔"
                },
                {
                    "count": 5000,
                    "message": "At this point people clicked on that weeb button %COUNT% times, just because %USER% keeps posting all these weeb memes..."
                }
            ]
        }
    },
    "best_of": {
        "enabled": false,
        "channel_id": "The ID of your best of channel",
        "recent_best": [
            {
                "cron_schedule": "10 0 20 * * *",
                "vote_type": "type1",
                "age_minimum": {
                    "days": 1
                },
                "age_maximum": {
                    "days": 2
                },
                "caption": "Every day for type1"
            },
            {
                "cron_schedule": "15 0 20 * * 1",
                "vote_type": "type2",
                "age_minimum": {
                    "days": 1
                },
                "age_maximum": {
                    "days": 2
                },
                "caption": "once a week for type2"
            }
        ],
        "random_good": [
            {
                "cron_schedule": "10 0 15 * * *",
                "age_minimum": {
                    "weeks": 4
                },
                "vote_minimum": {
                    "type1": 10
                },
                "caption": "Here's a good one"
            }
        ]
    },
    "debug": {
        "log_all_updates": false,
        "log_lifecycle_events": true,
        "command_chatinfo": true,
        "command_update_username": false,
        "command_voting_token": false
    },
    "vote_types": [
        {
            "id": "like",
            "emoji": "👍"
        },
        {
            "id": "cat",
            "emoji": "😺"
        }
    ]
}